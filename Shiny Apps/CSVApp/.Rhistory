q2 <- c(15.0, 13.0, 18.0, 14.5, 12.0, 11.0, 8.9, 8.0)
summary(q2)
sort(q2)
length(q2)
library(MASS)
data(cats)
cats$Bwt
summar(cats$Bwt)
summary(cats$Bwt)
trimMean(cats$Bwt,12.5,12.5)
mean,(cats$Bwt,trim = 12.5)
mean(cats$Bw, trim = 12.5)
barplot(cats$Bwt, main = "Body Weight of Cats")
barplot(cats$Sex, main = "Body Weights of Cats")
barplot(cats$Sex, main = "Body Weights of Cats")
cats$Sex
cats$Sex=as.numeric(as.character(cats$Sex))
barplot(cats$Sex, main = "Sex of Cats")
library(MASS)
data(cats)
barplot(cats$Sex, main = "Sex of Cats")
summary(cats$Sex)
barplot(summary(cats$Sex), main = "Sex of Cats")
boxplot(summary(cats$Sex) ~ cats$Sex, horizontal = TRUE, col = "orange")
boxplot(summary(cats$Sex) ~ cats$Hwt, horizontal = TRUE, col = "orange")
boxplot(cats$Sex ~ cats$Hwt, horizontal = TRUE, col = "orange")
library(MASS)
data(cats)
boxplot(cats$Sex ~ cats$Hwt, horizontal = TRUE, col = "orange")
boxplot(cats$Hwt ~ cats$Sex, horizontal = TRUE, col = "orange")
boxplot(cats$Hwt ~ cats$Sex, horizontal = TRUE, col = "orange", main = "Heart Weight by Sex")
boxplot(cats$Hwt ~ cats$Sex, horizontal = TRUE, col = "orange", title = "Heart Weight by Sex")
boxplot(cats$Hwt ~ cats$Sex, horizontal = TRUE, col = "orange", main = "Heart Weight by Sex")
boxplot(cats$Hwt ~ cats$Sex, horizontal = TRUE, col = "orange", main = "Heart Weight by Sex")
library(MASS)
data(cats)
boxplot(cats$Hwt ~ cats$Sex, horizontal = TRUE, col = "orange", main = "Heart Weight by Sex")
boxplot(cats$Hwt ~ cats$Sex, horizontal = TRUE, col = "orange",+
main = "Heart Weight by Sex", xlab = "Heart Weight")
boxplot(cats$Hwt ~ cats$Sex, horizontal = TRUE, col = "orange",
main = "Heart Weight by Sex", xlab = "Heart Weight")
IQR(cats$Sex)
mean(cats$Bwt, trim = 12.5)
IQR(cats$Bwt)
sd(cats$Bwt)
mean(cats$Bwt, trim = 15)
boxplot(cats$Bwt, horizontal = TRUE, col = "orange")
summary(cats$Bwt)
boxplot(cats$Hwt ~ cats$Sex, horizontal = TRUE, col = "orange",
main = "Heart Weight by Sex", xlab = "Heart Weight")
cS <- cats$Sex
cS <- cats$Sex
hW <- cs$Hwt
hW <- cS$Hwt
round(table(cats$Sex)/sum(table(cats$Hwt)), digits = 2)
round(table(cats$Sex)/sum(table(cats$Hwt)), digits = 3)
round(table(cats$Hwt)/sum(table(cats$Sex)), digits = 2)
round(table(cats$Sex)/sum(table(cats$Hwt)), digits = 3)
IQR(cats$Hwt)
IQR(cats$Hwt)
round(table(summary((cats$Sex))/sum(table(cats$Hwt)), digits = 3)
round(table(summary((cats$Sex))/sum(table(cats$Hwt)), digits = 3)
round(table(summary((cats$Sex))/sum(table(cats$Hwt)), digits = 3)
(table(summary((cats$Sex)))/sum(table(cats$Hwt)), digits = 3)
(table(summary((cats$Sex)))/sum(table(cats$Hwt)), digits = 3)
(table(sd((cats$Sex)))/sum(table(cats$Hwt)), digits = 3)
(table(sd((cats$Sex))/sum(table(cats$Hwt)), digits = 3)
table(sd((cats$Sex))/sum(table(cats$Hwt)), digits = 3)
round(table(cats$Sex)/sum(table(cats$Hwt)), digits = 2)
rtable(cats$Sex)/sum(table(cats$Hwt)), digits = 2
rtable(cats$Sex)/sum(table(cats$Hwt))
table(cats$Sex)/sum(table(cats$Hwt))
table(cats$Sex)/summary(table(cats$Hwt))
table(cats$Sex)/(table(cats$Hwt))
table(cats$Sex)/(table(summary(cats$Hwt))
table(cats$Sex)/(table(summary(cats$Hwt)))
table(cats$Sex)/table(summary(cats$Hwt))
table(cats$Sex)/table(sd(cats$Hwt))
table(sd(cats$Sex)/(table(summary(cats$Hwt))
table(sd(cats$Sex))/(table(summary(cats$Hwt))
table(sd(cats$Sex))/(table(cats$Hwt))
boxplot(cats$Hwt ~ cats$Sex, horizontal = TRUE, col = "orange",
main = "Heart Weight by Sex", xlab = "Heart Weight")
boxplot(cats$Hwt ~ cats$Sex, horizontal = TRUE, col = "orange",
main = "Heart Weight by Sex", xlab = "Heart Weight")
library(MASS)
data(cats)
boxplot(cats$Hwt ~ cats$Sex, horizontal = TRUE, col = "orange",
main = "Heart Weight by Sex", xlab = "Heart Weight")
boxplot(cats$Hwt ~ cats$Sex, horizontal = TRUE, col = "orange",
main = "Heart Weight by Sex", xlab = "Heart Weight")
aggregate(cats$Sex~cats$Hwt, experient, mean)
aggregate(cats$Sex~cats$Hwt, experient, mean)
aggregate(cats$Sex~cats$Hwt, mean)
aggregate(cats, mean)
aggregate(cats$Sex, mean)
aggregate(cats~sex+gender, mean)
aggregate(cats~sex+gender, mean)
aggregate(d[,2:3], mean)
aggregate(cats[,2:3], mean)
aggregate(cats[,2:3], list(Name=cats$Sex) mean)
aggregate(cats[,2:3], list(Name=cats$Sex), mean)
aggregate(cats[,2:3], list(Sex=cats$Sex), mean)
aggregate(cats[,2:3], list(Sex=cats$Sex), sd)
aggregate(cats[,2:3], list(Sex=cats$Sex), sd)
aggregate(cats[,2:3], list(Sex=cats$Sex), sd)
aggregate(cats[,2:3], list(Sex=cats$Sex), IQR)
aggregate(cats[,3], list(Sex=cats$Sex), mean)
aggregate(cats[,:3], list(Sex=cats$Sex), mean)
aggregate(cats[3], list(Sex=cats$Sex), mean)
aggregate(cats[3], list(Sex=cats$Sex), IQR)
summary(cats$Hwt[cats$Sex == "F"])
summary(cats$Hwt[cats$Sex == "M"])
6.300   8.350   9.100   9.202  10.100  13.000
summary(cats$Hwt[cats$Sex == "M"])
summary(cats$Hwt[cats$Sex == "F"])
aggregate(cats[3], list(Sex=cats$Sex), mean)
aggregate(cats[3], list(Sex by Mean=cats$Sex), mean)
aggregate(cats[3], list(Means=cats$Sex), mean)
aggregate(cats[3], list(Sex=cats$Sex), mean)
aggregate(cats[3], list(Sex=cats$Sex), sd)
aggregate(cats[3], list(Sex=cats$Sex), IQR)
summary(q2)
length(q2)
A.faces = 1:6
B.faces = 1:6
C.faces = c(6, 6, 2, 2, 2, 2)
D.faces = c(5, 5, 5, 1, 1, 1)
A.rolls = sample(A.faces, 200, replace = TRUE)
B.rolls = sample(B.faces, 200, replace = TRUE)
D.rolls = sample(D.faces, 200, replace = TRUE)
C.rolls = sample(C.faces, 200, replace = TRUE)
sum.standard = A.rolls + B.rolls
sum.nonstandard = C.rolls + D.rolls
library(MASS)
par(mfrow = c(2, 1))
table(sum.standard)
table(sum.nonstandard)
D.faces = c(5, 5, 5, 1, 1, 1)
sum.standard = A.rolls + B.rolls
sum.nonstandard = C.rolls + D.rolls
par(mfrow = c(2, 1))
barplot(sum.standard)
table(sum.standard)/sum(table(sum.standard))
table(sum.nonstandard)/sum(table(sum.nonstandard))
barplot(table(sum.standard)/sum(table(sum.standard)))
barplot(table(sum.standard)/sum(table(sum.standard)))
barplot(sum.nonstandard)
barplot(t(sum.standard)/sum(table(sum.standard))
table(sum.nonstandard)/sum(table(sum.nonstandard))
#Relative frequency tables:
table(sum.standard)/sum(table(sum.standard))
#2     3     4     5     6     7     8     9    10    11    12
#0.025 0.060 0.100 0.110 0.150 0.160 0.175 0.065 0.070 0.065 0.020
table(sum.nonstandard)/sum(table(sum.nonstandard))
#3     7    11
#0.345 0.505 0.150
#(5)
#Monte Carlo estimates probabilities follow a distribution of probabilities
#similar to those of the calculated true probabilities, with probability
#densities falling within the same regions
#(6)
A.rolls = sample(A.faces, 300, replace = TRUE)
B.rolls = sample(B.faces, 300, replace = TRUE)
D.rolls = sample(D.faces, 300, replace = TRUE)
C.rolls = sample(C.faces, 300, replace = TRUE)
sum.standard = A.rolls + B.rolls
sum.nonstandard = C.rolls + D.rolls
table(sum.standard)
#2  3  4  5  6  7  8  9 10 11 12
#8 16 23 28 46 40 46 37 29 22  5
table(sum.nonstandard)
#3   7    11
#103 154  43
#(7)
#Taking a sample size of 2000 would bring us to simulated probabilities
#likely nearing identical to our true probabilities, with the greater the
#number of simulations, the closer probabilites pull in the direction
#of their true values.
###### Section 2: Circuits ######
### Part 1: Calculating Probabilities ####
#(1)
#P(1OR2)ANDP(3OR4)
#(0.9+0.9 - 0.9^2)(0.9+0.9-0.9^2) = .9801
#(2)
#P(1AND2)ORP(3AND4)
#(0.9^2)+(0.9^2) -(0.9^2)^2 = .9639
#(3)
#Which design has a higher probability of working; what makes it
#better?
#Design 1 has a higher probability, as seen in the values, but also
#because the Design is only relying on a single of 2 possible switches working
#at 2 junctures, with 4 possible pathways. Design 2 presents only
#2 possible pathways from A to B, each of which depend on both switches
#working.
### Part 2: Estimating Probabilities ####
#(1)
relay = c(0, 1)
probs = c(0.1, 0.9)
A1 = sample(relay, 10000, replace = TRUE, probs)
help(sample)
A2 = sample(relay, 10000, replace = TRUE, probs)
A3 = sample(relay, 10000, replace = TRUE, probs)
A4 = sample(relay, 10000, replace = TRUE, probs)
relays = cbind(A1, A2, A3, A4)
barplot((sum.standard)/sum(table(sum.standard))
table(sum.nonstandard)/sum(table(sum.nonstandard))
#Relative frequency tables:
table(sum.standard)/sum(table(sum.standard))
#2     3     4     5     6     7     8     9    10    11    12
#0.025 0.060 0.100 0.110 0.150 0.160 0.175 0.065 0.070 0.065 0.020
table(sum.nonstandard)/sum(table(sum.nonstandard))
#3     7    11
#0.345 0.505 0.150
#(5)
#Monte Carlo estimates probabilities follow a distribution of probabilities
#similar to those of the calculated true probabilities, with probability
#densities falling within the same regions
#(6)
A.rolls = sample(A.faces, 300, replace = TRUE)
B.rolls = sample(B.faces, 300, replace = TRUE)
D.rolls = sample(D.faces, 300, replace = TRUE)
C.rolls = sample(C.faces, 300, replace = TRUE)
sum.standard = A.rolls + B.rolls
sum.nonstandard = C.rolls + D.rolls
table(sum.standard)
#2  3  4  5  6  7  8  9 10 11 12
#8 16 23 28 46 40 46 37 29 22  5
table(sum.nonstandard)
#3   7    11
#103 154  43
#(7)
#Taking a sample size of 2000 would bring us to simulated probabilities
#likely nearing identical to our true probabilities, with the greater the
#number of simulations, the closer probabilites pull in the direction
#of their true values.
###### Section 2: Circuits ######
### Part 1: Calculating Probabilities ####
#(1)
#P(1OR2)ANDP(3OR4)
#(0.9+0.9 - 0.9^2)(0.9+0.9-0.9^2) = .9801
#(2)
#P(1AND2)ORP(3AND4)
#(0.9^2)+(0.9^2) -(0.9^2)^2 = .9639
#(3)
#Which design has a higher probability of working; what makes it
#better?
#Design 1 has a higher probability, as seen in the values, but also
#because the Design is only relying on a single of 2 possible switches working
#at 2 junctures, with 4 possible pathways. Design 2 presents only
#2 possible pathways from A to B, each of which depend on both switches
#working.
### Part 2: Estimating Probabilities ####
#(1)
relay = c(0, 1)
probs = c(0.1, 0.9)
A1 = sample(relay, 10000, replace = TRUE, probs)
help(sample)
A2 = sample(relay, 10000, replace = TRUE, probs)
A3 = sample(relay, 10000, replace = TRUE, probs)
A4 = sample(relay, 10000, replace = TRUE, probs)
relays = cbind(A1, A2, A3, A4)
barplot((sum.standard)/sum(table(sum.standard)))
barplot(table(sum.standard)/sum(table(sum.standard)))
barplot(table(sum.nonstandard)/sum(table(sum.nonstandard)))
barplot(table(sum.standard)/sum(table(sum.standard)))
help(barplot)
barplot(table(sum.nonstandard)/sum(table(sum.nonstandard)),xlab = "Standard 2-Roll Sums", ylab = "Rel. Freq.", main =
"2-Roll Standard Susm")
barplot(table(sum.standard)/sum(table(sum.standard)),xlab = "Standard 2-Roll Sums", ylab = "Rel. Freq.",
main = "2-Roll Standard Sums"))
barplot(table(sum.standard)/sum(table(sum.standard)),xlab = "Standard 2-Roll Sums", ylab = "Rel. Freq.",
main = "2-Roll Standard Sums")))
barplot(table(sum.standard)/sum(table(sum.standard)),xlab = "Standard 2-Roll Sums", ylab = "Rel. Freq.",
main = "2-Roll Standard Sums"))
barplot(table(sum.standard)/sum(table(sum.standard)),xlab = "Standard 2-Roll Sums", ylab = "Rel. Freq.",
main = "2-Roll Standard Sums")
barplot(table(sum.nonstandard)/sum(table(sum.nonstandard)),xlab = "Non-Standard 2-Roll Sums", ylab = "Rel. Freq.", main =
"2-Roll Non-Standard Sums")
barplot(table(sum.standard)/sum(table(sum.standard)),xlab = "Standard 2-Roll Sums", ylab = "Rel. Freq.",
main = "2-Roll Standard Sums")
A.rolls = sample(A.faces, 300, replace = TRUE)
B.rolls = sample(B.faces, 300, replace = TRUE)
D.rolls = sample(D.faces, 300, replace = TRUE)
C.rolls = sample(C.faces, 300, replace = TRUE)
A.rolls = sample(A.faces, 300, replace = TRUE)
B.rolls = sample(B.faces, 300, replace = TRUE)
D.rolls = sample(D.faces, 300, replace = TRUE)
C.rolls = sample(C.faces, 300, replace = TRUE)
sum.standard = A.rolls + B.rolls
sum.nonstandard = C.rolls + D.rolls
table(sum.standard)/sum(table(sum.standard))
round(table(sum.standard)/sum(table(sum.standard)))
round(table(sum.standard)/sum(table(sum.standard)),3)
round(table(sum.nonstandard)/sum(table(sum.nonstandard)))
round(table(sum.nonstandard)/sum(table(sum.nonstandard)),.3)
round(table(sum.nonstandard)/sum(table(sum.nonstandard)),3)
A.rolls = sample(A.faces, 3000, replace = TRUE)
B.rolls = sample(B.faces, 3000, replace = TRUE)
D.rolls = sample(D.faces, 3000, replace = TRUE)
C.rolls = sample(C.faces, 3000, replace = TRUE)
sum.standard = A.rolls + B.rolls
sum.nonstandard = C.rolls + D.rolls
round(table(sum.standard)/sum(table(sum.standard)),3)
round(table(sum.nonstandard)/sum(table(sum.nonstandard)),3)
A.rolls = sample(A.faces, 5000, replace = TRUE)
B.rolls = sample(B.faces, 5000, replace = TRUE)
C.rolls = sample(C.faces, 5000, replace = TRUE)
D.rolls = sample(D.faces, 5000, replace = TRUE)
sum.standard = A.rolls + B.rolls
sum.nonstandard = C.rolls + D.rolls
round(table(sum.standard)/sum(table(sum.standard)),3)
#2     3     4     5     6     7     8     9    10    11    12
#0.017 0.080 0.093 0.113 0.170 0.147 0.113 0.123 0.063 0.057 0.023
round(table(sum.nonstandard)/sum(table(sum.nonstandard)),3)
relay = c(0, 1)
probs = c(0.1, 0.9)
A1 = sample(relay, 10000, replace = TRUE, probs)
help(sample)
A2 = sample(relay, 10000, replace = TRUE, probs)
A3 = sample(relay, 10000, replace = TRUE, probs)
A4 = sample(relay, 10000, replace = TRUE, probs)
relays = cbind(A1, A2, A3, A4)
relays[1:4]
relays[:4]
relays[4:]
relays[1:5,]
relays[1:10,] #First five columns of relay
length(which((A1 == 1 | A2 == 1)&(A3==1 | A4 == 1))
length(which((A1 == 1 | A2 == 1)&(A3==1 | A4 == 1)))
length(which((A1 == 1 | A2 == 1)&(A3==1 | A4 == 1)))
length(which((A1 == 1 | A2 == 1)&(A3==1 | A4 == 1)))
length(which((A1 == 1 | A2 == 1)&(A3==1 | A4 == 1))) / sum(A1,A2,A3,A4)
length(which((A1 == 1 | A2 == 1)&(A3==1 | A4 == 1))) / 10000
length(which((A1 == 1 & A2 == 1)|(A3==1 & A4 == 1)))
length(which((A1 == 1 & A2 == 1)|(A3==1 & A4 == 1)))
bearings <- c(47.1, 68.1, 90.8, 103.6, 106.0, 115.0, 126.0, 146.6, 229.0, 240.0, 240.0, 278.0, 278.0, 289.0, 289.0, 367.0, 392.0, 505.0
)
bearings <- c(47.1, 68.1, 90.8, 103.6, 106.0, 115.0, 126.0, 146.6, 229.0, 240.0, 240.0, 278.0, 278.0, 289.0, 289.0, 367.0, 392.0, 505.0)
qqnorm(bearings)
qqnorm(bearings, title = "Q-Q Plot Q92")
qqnorm(bearings, main = "Q-Q Plot Q92")
qqnorm(bearings, main = "Q-Q Plot Question 92")
rainfall <- c(.77,1.20,3.00,1.62,2.81,2.48, 1.74,.47,3.09, 1.31,1.87,.96,.81,1.43,1.51,.32,1.18,1.89,1.20,3.37,2.10,.59,1.35,.90,1.95,2.20,.52,.81,4.75,2.95)
rainfall <- c(.77,1.20,3.00,1.62,2.81,2.48, 1.74,.47,3.09, 1.31,1.87,.96,.81,1.43,1.51,.32,1.18,1.89,1.20,3.37,2.10,.59,1.35,.90,1.95,2.20,.52,.81,4.75,2.95)
rainfall2 <- rainfall^(1/2)
rainfall3 <- rainfall^(1/3)
par(mfrow = c(2, 2))
bearings <- c(47.1, 68.1, 90.8, 103.6, 106.0, 115.0, 126.0, 146.6, 229.0, 240.0, 240.0, 278.0, 278.0, 289.0, 289.0, 367.0, 392.0, 505.0)
qqnorm(bearings, main = "Q-Q Plot Question 92")
rainfall <- c(.77,1.20,3.00,1.62,2.81,2.48, 1.74,.47,3.09, 1.31,1.87,.96,.81,1.43,1.51,.32,1.18,1.89,1.20,3.37,2.10,.59,1.35,.90,1.95,2.20,.52,.81,4.75,2.95)
qqnorm(rainfall, main = "Q-Q Plot Question 94-Standard")
qqnorm(rainfall2, main = "Q-Q Plot Question 94-Sq Root")
rainfall3 <- rainfall^(1/3)
qqnorm(rainfall3, main = "Q-Q Plot Question 94-Cb Root")
par(mfrow = c(2, 2))
bearings <- c(47.1, 68.1, 90.8, 103.6, 106.0, 115.0, 126.0, 146.6, 229.0, 240.0, 240.0, 278.0, 278.0, 289.0, 289.0, 367.0, 392.0, 505.0)
qqnorm(bearings, main = "Q-Q Plot Question 92")
rainfall <- c(.77,1.20,3.00,1.62,2.81,2.48, 1.74,.47,3.09, 1.31,1.87,.96,.81,1.43,1.51,.32,1.18,1.89,1.20,3.37,2.10,.59,1.35,.90,1.95,2.20,.52,.81,4.75,2.95)
qqnorm(rainfall, main = "Q-Q Plot Question 94-Standard")
qqline(rainfall)
rainfall2 <- rainfall^(1/2)
qqnorm(rainfall2, main = "Q-Q Plot Question 94-Sq Root")
qqline(rainfall2)
rainfall3 <- rainfall^(1/3)
qqnorm(rainfall3, main = "Q-Q Plot Question 94-Cb Root")
qqline(rainfall3)
qqline(bearrings)
qqline(bearings)
bearings <- c(47.1, 68.1, 90.8, 103.6, 106.0, 115.0, 126.0, 146.6, 229.0, 240.0, 240.0, 278.0, 278.0, 289.0, 289.0, 367.0, 392.0, 505.0)
qqnorm(bearings, main = "Q-Q Plot Question 92")
qqline(bearings)
rainfall <- c(.77,1.20,3.00,1.62,2.81,2.48, 1.74,.47,3.09, 1.31,1.87,.96,.81,1.43,1.51,.32,1.18,1.89,1.20,3.37,2.10,.59,1.35,.90,1.95,2.20,.52,.81,4.75,2.95)
qqnorm(rainfall, main = "Q-Q Plot Question 94-Standard")
qqline(rainfall)
rainfall2 <- rainfall^(1/2)
qqnorm(rainfall2, main = "Q-Q Plot Question 94-Sq Root")
qqline(rainfall2)
rainfall3 <- rainfall^(1/3)
qqnorm(rainfall3, main = "Q-Q Plot Question 94-Cb Root")
qqline(rainfall3)
shiny::runApp('EmotionalVis/Shiny Apps/CSVApp')
library(shiny)
runGist(9737637)
runApp('EmotionalVis/Shiny Apps/CSVApp')
